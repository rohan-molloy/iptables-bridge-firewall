domain ip {
    table nat {
        chain OUTPUT policy ACCEPT;
        chain PREROUTING policy ACCEPT;
        chain POSTROUTING policy ACCEPT;
        chain INPUT policy ACCEPT;
    }
    table raw {
        chain PREROUTING policy ACCEPT;
        chain OUTPUT policy ACCEPT;
    }
    table mangle {
        chain PREROUTING policy ACCEPT;
        chain OUTPUT policy ACCEPT;
        chain FORWARD policy ACCEPT;
        chain INPUT policy ACCEPT;
        chain POSTROUTING policy ACCEPT;
    }
    table filter {
        chain INPUT {
            policy DROP;
            mod conntrack ctstate (RELATED ESTABLISHED) ACCEPT;
            interface lo ACCEPT;
            protocol icmp icmpv6-type 8 ACCEPT;
            mod conntrack ctstate NEW mod set set mgmt_from (src src) mod set set mgmt_endpoint (dst dst) ACCEPT;
        }
        chain FORWARD {
            policy DROP;
            protocol udp {
                sport 68 dport 67 NOP;
                sport 67 dport 68 NOP;
            }
            mod set {
                set dmz_out_exempt src mod physdev physdev-in eth1 ACCEPT;
                set dmz_infected src {
                    LOG;
                    REJECT reject-with icmp-host-prohibited;
                }
                set et_botcc dst mod physdev physdev-in eth1 {
                    LOG;
                    SET add-set dmz_infected src;
                }
            }
            protocol tcp dport 1025:65535 tcp-flags ! (FIN SYN RST ACK) SYN mod physdev physdev-in eth0 ACCEPT;
            protocol udp dport 1025:65535 mod physdev physdev-in eth0 ACCEPT;
            protocol icmp {
                icmpv6-type 3 ACCEPT;
                icmpv6-type 11 ACCEPT;
                icmpv6-type 12 ACCEPT;
                icmpv6-type 8 mod physdev physdev-in eth1 ACCEPT;
                icmpv6-type 0 ACCEPT;
            }
            mod set {
                set dmz_out (dst dst) mod physdev physdev-in eth1 ACCEPT;
                set dmz_out (src src) mod physdev physdev-in eth0 ACCEPT;
                set dmz_endpoint (dst dst) mod physdev physdev-in eth0 ACCEPT;
                set dmz_endpoint (src src) mod physdev physdev-in eth1 ACCEPT;
            }
        }
        chain OUTPUT {
            policy ACCEPT;
            outerface lo ACCEPT;
            outerface br0 mod set set fw_out (dst dst) ACCEPT;
        }
    }
}
